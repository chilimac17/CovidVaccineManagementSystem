/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Covid19;


import java.awt.Color;
import java.util.*;
import javax.swing.JOptionPane;
import Covid19.AdminstratorForm;
import static Covid19.AdminstratorForm.adminList;
import static Covid19.AdminstratorForm.jTableA1;
import static Covid19.AdminstratorForm.jTableA2;
import static Covid19.AdminstratorForm.jTableA3;
import static Covid19.ClinicianForm.jCTable;
import static Covid19.RecipientForm.infoBox;
import javax.swing.table.DefaultTableModel;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.text.Position;
import static Covid19.RecipientForm.jRTable;

/**
 *
 * @author Admin
 */
public class AppointmentForm extends javax.swing.JFrame {

    /**
     * Creates new form Appointment
     */
    public AppointmentForm() {
        initComponents();
    }
   
  
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jADD = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jRemove = new javax.swing.JButton();
        jUPdate = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jDose = new javax.swing.JTextField();
        jDateA = new javax.swing.JTextField();
        jBack = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jATable = new javax.swing.JTable();
        jDplay = new javax.swing.JButton();
        jRID = new javax.swing.JTextField();
        jCID = new javax.swing.JTextField();
        jAID = new javax.swing.JTextField();
        jSRID = new javax.swing.JButton();
        jSCID = new javax.swing.JButton();
        jVBox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 48)); // NOI18N
        jLabel1.setText("Appointment");

        jLabel2.setText("Appointment ID:");

        jLabel3.setText("Recipiention ID:");

        jLabel4.setText("Clinician ID:");

        jADD.setText("ADD");
        jADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jADDActionPerformed(evt);
            }
        });

        jLabel5.setText("Vaccine Name");

        jRemove.setText("REMOVE");
        jRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRemoveActionPerformed(evt);
            }
        });

        jUPdate.setText("UPDATE");
        jUPdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jUPdateActionPerformed(evt);
            }
        });

        jLabel6.setText("Dose");

        jLabel7.setText("Date");

        jDose.setEditable(false);

        jBack.setText("BACK");
        jBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBackActionPerformed(evt);
            }
        });

        jATable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "Appointment ID", "Recipient ID", "Clinician ID", "Vaccine Name", "Dose", "Date"
            }
        ));
        jATable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jATableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jATable);

        jDplay.setText("DISPLAY");
        jDplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDplayActionPerformed(evt);
            }
        });

        jRID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRIDActionPerformed(evt);
            }
        });

        jAID.setEditable(false);

        jSRID.setText("Search");
        jSRID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSRIDActionPerformed(evt);
            }
        });

        jSCID.setText("Search");
        jSCID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSCIDActionPerformed(evt);
            }
        });

        jVBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "N/A", "Pfizer-BioNTech", "Moderna", "Johnson & Johnson's Janssen" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        getContentPane().setBackground(Color.ORANGE);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(458, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(321, 321, 321))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jVBox, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(29, 29, 29))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(49, 49, 49)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jDose, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel6)
                                        .addComponent(jSCID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jSRID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jDateA, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(18, 18, 18)
                                    .addComponent(jAID))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addGap(38, 38, 38)
                                    .addComponent(jCID, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addGap(18, 18, 18)
                                    .addComponent(jRID, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 985, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(221, 221, 221)
                        .addComponent(jADD, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(jUPdate)
                        .addGap(52, 52, 52)
                        .addComponent(jRemove)
                        .addGap(49, 49, 49)
                        .addComponent(jDplay))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(387, 387, 387)
                        .addComponent(jBack, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(jLabel1)
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jAID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jRID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSRID))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDateA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jCID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSCID))
                        .addGap(47, 47, 47)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jVBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(53, 53, 53)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jADD)
                    .addComponent(jUPdate)
                    .addComponent(jRemove)
                    .addComponent(jDplay))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBack)
                .addContainerGap(120, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jADDActionPerformed
        String vRID = jRID.getText();  
        if (adminList.AppList.checkRecipientFull(vRID) && vRID !=null )
        {infoBox("The Recipient ID " + vRID+ " already had an appoinment.", "Please try again!!!");
        jRID.setText("");  
        return;
        }
           String vCID = jCID.getText();  
        if (adminList.AppList.checkAppointmentFull(vCID) && vCID !=null )
        {infoBox("The Clinician ID " + vCID+ " already has full 10 appointment.", "Please try again!!!");
        jCID.setText(""); 
        return;
        }
        if (jRID.getText().equals("")|| jCID.getText().equals("")||jVBox.getSelectedItem().equals("N/A")||jDose.getText().equals("")||jDateA.getText().equals(""))
        infoBox("Please filling out your information", "Missing data.");
        else
        {   
            String vType = (String) jVBox.getSelectedItem();
            if (adminList.CList.checkInventory(vCID,vType))
        {   
            infoBox("Clinician ID: " +vCID +" does not have " + vType, "Missing data.");
            return;
            }
            DefaultTableModel model = (DefaultTableModel)jATable.getModel();
             if (model.getRowCount()>0){
           int  tempNum = Integer.parseInt(model.getValueAt(model.getRowCount()-1, 0).toString().substring(1));
          
        adminList.AppointmentIdNum=tempNum+1;
           }
           else 
        adminList.AppointmentIdNum++;
        adminList.AppList.addAppointment("A"+ String.valueOf(adminList.AppointmentIdNum), jRID.getText(), jCID.getText(),(String)jVBox.getSelectedItem(),jDose.getText(),jDateA.getText());
        adminList.AppList.display();
        adminList.CList.updateAfterAppointment(vCID,vType);
        clearTable3();}
       
        
    }                                    
     
        private void clearTable3(){
          jAID.setText("");
        jRID.setText("");
         jCID.setText("");
        jVBox.setSelectedIndex(0);
        jDose.setText("");
        jDateA.setText("");
 
    }//GEN-LAST:event_jADDActionPerformed

    private void jBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBackActionPerformed
    this.setVisible(false);
    new AdminstratorForm().setVisible(true);
    new AdminstratorForm().setState(java.awt.Frame.NORMAL);  
    }//GEN-LAST:event_jBackActionPerformed

    private void jDplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDplayActionPerformed
adminList.AppList.display();  
    }//GEN-LAST:event_jDplayActionPerformed

    private void jUPdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jUPdateActionPerformed
         if (jRID.getText().equals("")|| jCID.getText().equals("")||jVBox.getSelectedItem().equals("N/A")||jDose.getText().equals("")||jDateA.getText().equals(""))
        infoBox("Please filling out your information", "Missing data");
        else
        {
            String currentRID = jRID.getText();
            String currentCID = jCID.getText();
            String currentVID = (String)jVBox.getSelectedItem();
            
       adminList.AppList.updateAppointment(jAID.getText(),jAID.getText(), jRID.getText(), jCID.getText(),(String)(jVBox.getSelectedItem()),jDose.getText(),jDateA.getText());
       adminList.CList.updateAfterRemove(prevCID, prevVID);
       adminList.CList.updateAfterAppointment(currentCID, currentVID);
       adminList.AppList.display();    
        clearTable3();
    }//GEN-LAST:event_jUPdateActionPerformed
    }
    private void jRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRemoveActionPerformed
             if (adminList.AppList.size()==0)
           infoBox("Please filling out your information", "Missing data");
       else 
       {   
           String vCID = jCID.getText();
            String vType = (String) jVBox.getSelectedItem();
            adminList.AppList.removeAppointment(jAID.getText());
            adminList.CList.updateAfterRemove(vCID, vType);
            adminList.AppList.display();
       clearTable3();
       }
      
    }//GEN-LAST:event_jRemoveActionPerformed

    private void jATableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jATableMouseClicked
           
        DefaultTableModel model = (DefaultTableModel) jATable.getModel();
         int selectedRowIndex = jATable.getSelectedRow();
       jAID.setText(model.getValueAt(selectedRowIndex,0).toString());
       jRID.setText(model.getValueAt(selectedRowIndex,1).toString());
        prevRID =model.getValueAt(selectedRowIndex,1).toString();
       jCID.setText(model.getValueAt(selectedRowIndex,2).toString());
       prevCID =model.getValueAt(selectedRowIndex,2).toString();
       prevVID= model.getValueAt(selectedRowIndex,3).toString();
           if (model.getValueAt(selectedRowIndex,3).toString().equals("Pfizer-BioNTech"))
                jVBox.setSelectedIndex(1);
           else if (model.getValueAt(selectedRowIndex,3).toString().equals("Moderna"))
                jVBox.setSelectedIndex(2);
           else if (model.getValueAt(selectedRowIndex,3).toString().equals("Johnson & Johnson’s Janssen"))
                jVBox.setSelectedIndex(3);
       jDose.setText(model.getValueAt(selectedRowIndex,4).toString());
       jDateA.setText(model.getValueAt(selectedRowIndex,5).toString());
    }//GEN-LAST:event_jATableMouseClicked

    private void jRIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRIDActionPerformed

    private void jSRIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSRIDActionPerformed
       

        if (adminList.RList.size()==0)
        {   jRID.setText("");
            infoBox("There is no Record for Recipient", "Please back and add Recipient!!!");
        }
        else
        {
           for (int i=0; i<adminList.RList.size();i++)
           {
           RTree.add(adminList.RList.get(i));
           }               
            String searchRID =jRID.getText();
               
               if (!RTree.searchRID(RTree.root,searchRID))
               {
                   jRID.setText("");
                   
                   infoBox("Recipient ID does not match the database", "Please try again!!!");
               }
               else {
                  infoBox("Recipient ID matched the database","Success!!!"); 
                  
                  String vName = adminList.RList.findVaccineName(searchRID);
                  jDose.setText(adminList.RList.findDose(searchRID));
                  if (vName.equals("N/A"))
                  {     jDose.setText("1");
                        jVBox.setSelectedIndex(0);
                      infoBox("Adding 1st Appoinment", "Please Select Vaccine Type and Date!");
                 
                  }
                  else {
                  int numDose=Integer. parseInt(jDose.getText());
                  
                  if (numDose==2 && vName.equals("Pfizer-BioNTech") || numDose==2 && vName.equals("Moderna")|| numDose==1 && vName.equals("Johnson & Johnson’s Janssen"))
                  {  jVBox.setSelectedIndex(0);
                      jDose.setText("N/A");
                      infoBox("The recipient already took enough", "Congrats!!!");
                    }
                  else
                  { if (vName.equals("Pfizer-BioNTech") )
                  {     jVBox.setSelectedIndex(1);
                      infoBox("Adding 2nd Appoinment", "Please enter the Date!");
                  }
                  else if (vName.equals("Moderna"))
                   {   jVBox.setSelectedIndex(2);
                      infoBox("Adding 2nd Appoinment", "Please enter the Date!");
                  }
                  
                 
                  numDose++;
                  jDose.setText(String.valueOf(numDose));
                  }
               }
               }
        }	
    }//GEN-LAST:event_jSRIDActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
          adminList.AppList.display();
    }//GEN-LAST:event_formWindowOpened

    private void jSCIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSCIDActionPerformed
     
        if (adminList.CList.size()==0)
        {   jCID.setText("");
            infoBox("There is no Record for Clinician", "Please back and add Clinician!!!");
        }
        else {
        for (int i=0; i<adminList.CList.size();i++)
           {
           CTree.add(adminList.CList.get(i));
           }               
            String searchCID =jCID.getText();
               
               if (!CTree.searchRID(CTree.root,searchCID))
               {
                   jCID.setText("");
                   infoBox("Clinician ID does not match the database", "Please try again!!!");
               }
               else {
                  infoBox("Clinician ID matched the database","Success!!!"); 
                  String vType = (String) jVBox.getSelectedItem();
                  int totaleachType = Integer.parseInt(adminList.CList.findTotalofVaccineName(searchCID,vType));
               if (totaleachType>0)
               {jCID.setText(searchCID);
               }
               else 
               {   if (vType.equals("N/A"))
                    infoBox("Clinician does not have any dose","Please choose others!!!"); 
                    else
                   infoBox("Clinician does not have "+ vType,"Please choose others!!!"); 
                   jCID.setText(""); 
               }

               }
        }
    }//GEN-LAST:event_jSCIDActionPerformed

    public static void main(String args[]) {
  java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AppointmentForm().setVisible(true);
            }
        });
    }
       public String prevRID = "";
       public String prevCID = "";
       public String prevVID = "";
 public static RecipientIndexTree<String> RTree = new RecipientIndexTree<>();
  public static RecipientIndexTree<String> CTree = new RecipientIndexTree<>();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jADD;
    private javax.swing.JTextField jAID;
    public static javax.swing.JTable jATable;
    private javax.swing.JButton jBack;
    private javax.swing.JTextField jCID;
    private javax.swing.JTextField jDateA;
    private javax.swing.JTextField jDose;
    private javax.swing.JButton jDplay;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    public static javax.swing.JTextField jRID;
    private javax.swing.JButton jRemove;
    private javax.swing.JButton jSCID;
    private javax.swing.JButton jSRID;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton jUPdate;
    private javax.swing.JComboBox<String> jVBox;
    // End of variables declaration//GEN-END:variables
}
